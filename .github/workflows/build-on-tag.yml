name: Build on Tag

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with "v"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Multi-platform builds
      - name: Build binaries
        run: |
          platforms=("linux/amd64" "linux/arm64" "windows/amd64" "darwin/amd64" "darwin/arm64")
          mkdir -p dist
          for platform in "${platforms[@]}"; do
            os=$(echo $platform | cut -d/ -f1)
            arch=$(echo $platform | cut -d/ -f2)
            output="dist/zkcopy-${os}-${arch}"
            if [ "$os" == "windows" ]; then
              output="${output}.exe"
            fi
            echo "Building for $platform -> $output"
            GOOS=$os GOARCH=$arch go build -o $output ./...
          done

      # Archive the built binaries
      - name: Archive binaries
        run: |
          mkdir -p artifacts
          for file in dist/*; do
            tar czf artifacts/$(basename $file).tar.gz -C dist $(basename $file)
          done

      # Create GitHub Release
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changelog
            - Automatically built and released by GitHub Actions
          draft: false
          prerelease: false

      # Upload binaries to the release
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/*
          asset_name: ${{ runner.os }}-release
          asset_content_type: application/gzip